:root{
    --a1: #ffb3b3;
    --a3: #5f131b;
    --b1: #e3e3e3;
}

body{
    margin: 0;
    overflow: hidden;
    background: var(--a1);
}
.outer-container{
    display: flex;
    height: 100vh;
    width: 100vw;
    overflow: hidden;
    justify-content: center;
    align-items: center;
}
.container{
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: column;
    max-width: 100%;
    height: calc(100% - 16px);
    padding: 8px;
}

svg {
    & #input-hidden-weights-animated > path, #hidden-output-weights-animated > path {
        opacity: 1;
        stroke-dasharray: 1000;
        stroke-dashoffset: 1000;
        stroke-linecap: round;
        //animation: dash 2s forwards infinite;
    }
    @for $i from 1 through 100 {
        & #input-hidden-weights-animated > path:nth-child(#{$i}) {
            animation: dash calc( random(20) / 10 + 4 ) + s forwards calc( random(50) / 10 ) + s infinite;
        }
    }
    @for $i from 1 through 100 {
        & #hidden-output-weights-animated > path:nth-child(#{$i}) {
            animation: dash calc( random(20) / 10 + 4 ) + s forwards calc( random(50) / 10 ) + s infinite;
        }
    }
    @for $i from 1 through 10 {
        & #input-layer circle:nth-child(#{$i}) {
            animation: flash calc( random(40) / 10 + 4 ) + s forwards calc( random(80) / 10 ) + s infinite;
        }
    }
    @for $i from 1 through 10 {
        & #hidden-layer circle:nth-child(#{$i}) {
            animation: flash calc( random(40) / 10 + 4 ) + s forwards calc( random(80) / 10 ) + s infinite;
        }
    }
    @for $i from 1 through 10 {
        & #output-layer circle:nth-child(#{$i}) {
            animation: flash calc( random(40) / 10 + 4 ) + s forwards calc( random(80) / 10 ) + s infinite;
        }
    }
    @for $i from 1 through 10 {
        & #input-layer svg:nth-child(#{$i}) path{
            transform: scale(.5) translate(8px, 8px);
            d: path("M 0 20 C 0 9 9 0 20 0 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 11 0 20 9 20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 0 11 -9 20 -20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c -11 0 -20 -9 -20 -20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 Z");
            transition: all 1s ease;
            animation: transform 6s ease calc(random(60) / 10) + s infinite;
        }
    }
    @for $i from 1 through 10 {
        & #hidden-layer svg:nth-child(#{$i}) path{
            transform: scale(.5) translate(8px, 8px);
            d: path("M 0 20 C 0 9 9 0 20 0 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 11 0 20 9 20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 0 11 -9 20 -20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c -11 0 -20 -9 -20 -20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 Z");
            transition: all 1s ease;
            animation: transform 6s ease calc(random(60) / 10) + s infinite;
        }
    }
    @for $i from 1 through 10 {
        & #output-layer svg:nth-child(#{$i}) path{
            transform: scale(.5) translate(8px, 8px);
            d: path("M 0 20 C 0 9 9 0 20 0 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 11 0 20 9 20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 0 11 -9 20 -20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c -11 0 -20 -9 -20 -20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 Z");
            transition: all 1s ease;
            animation: transform 6s ease calc(random(60) / 10) + s infinite;
        }
    }
}

@keyframes transform{
    0%{
        d: path("M 0 20 C 0 9 9 0 20 0 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 11 0 20 9 20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 0 11 -9 20 -20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c -11 0 -20 -9 -20 -20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 Z");
        transform: scale(.5) translate(8px, 8px);
    }
    20%{
        d: path("M.887 14.467C-2.845 5.875 5.875-2.845 14.467.887l1.42.617a10.323 10.323 0 0 0 8.225 0l1.42-.617c8.593-3.732 17.313 4.988 13.581 13.58l-.617 1.42a10.323 10.323 0 0 0 0 8.225l.617 1.42c3.732 8.593-4.989 17.313-13.58 13.581l-1.42-.617a10.323 10.323 0 0 0-8.225 0l-1.42.617C5.874 42.845-2.846 34.125.886 25.533l.617-1.42a10.323 10.323 0 0 0 0-8.225l-.617-1.42Z");
        transform: scale(.7) translate(0, 0);
    }
    40%{
        d: path("M 0 20 C 0 9 9 0 20 0 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 11 0 20 9 20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 0 11 -9 20 -20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c -11 0 -20 -9 -20 -20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 Z");
        transform: scale(.5) translate(8px, 8px);
    }
    100%{
        d: path("M 0 20 C 0 9 9 0 20 0 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 11 0 20 9 20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c 0 11 -9 20 -20 20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 c -11 0 -20 -9 -20 -20 l 0 0 a 10.323 10.323 0 0 0 0 0 l 0 0 Z");
        transform: scale(.5) translate(8px, 8px);
    }
}

@keyframes flash {
    0%{
        stroke: var(--a3);
        fill: var(--a1);
    }
    10%{
        stroke: var(--b1);
        fill: var(--b1);
    }
    20%{
        stroke: var(--a3);
        fill: var(--a1);
    }
    100%{
        stroke: var(--a3);
        fill: var(--a1);
    }
}

@keyframes dash {
    0% {
        stroke-dashoffset: 1000;
    }
    40% {
        opacity: 1;
    }
    99% {
        opacity: 0;
        stroke-dashoffset: 200;
    }
    100% {
        opacity: 0;
        stroke-dashoffset: 1000;
    }
}


// controls

input[type=number]{
    -moz-appearance: textfield;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}






.controls{
    display: flex;
    align-items: center;
    justify-content: space-around;
    width: 100%;
    & .control{
        display: flex;
        & span{
            color: var(--a3);
        }
    }
}

.btn{
    all: unset;
    cursor: pointer;
    width: 40px;
    height: 40px;
    box-sizing: border-box;
    border: 4px solid var(--a3);
    display: flex;
    justify-content: center;
    align-items: center;
}
.btn-left{
    border-radius: 12px 0 0 12px;
    border-right: 2px solid var(--a3);

}
.btn-right{
    border-radius: 0 12px 12px 0;
    border-left: 2px solid var(--a3);
}

input[type=number]{
    background-color: var(--a1);
    width: 40px;
    height: 40px;
    box-sizing: border-box;
    border-top: 4px solid var(--a3);
    border-bottom: 4px solid var(--a3);
    border-left: 2px solid var(--a3);
    border-right: 2px solid var(--a3);
    text-align: center;
    font-size: 20px;
    font-weight: bold;
    color: var(--a3);
    &:focus {
        outline: none;
    }
}





.material-symbols-rounded{
    font-variation-settings:
            'FILL' 0,
            'wght' 700,
            'GRAD' 0,
            'opsz' 24
}